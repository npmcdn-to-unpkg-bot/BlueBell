users{
 user_id,
 user_name, 
 password, 
 email, 
 user_image,
 user_designation(whether admin/ privileged user/ admin)
 last logged in [optional]
 }

speciality_items
{
speciality_id
item_name,
restaurant_id,
location_id/ location,
no_of_likes,
}

restaurants
{
restaurant_id,
restaurant_name,
restaurant_address,
location_id,
restaurant_phone,
about,
working_hours,
menu,
restaurant_rating/likes/whatever matrix,
restaurant_pricing
restaurant_special_items(if more then seperate collection can be given)
}

comments
{
comment_id,
user_id,
comment,
date_time,
restaurant_id,
speciality_id(if present},
}
images
{
image_id,
image_url,
user_id,
restaurant_id,
date_time(if required),
image_caption(if required),
speciality_id(if it is for any special dish)
}
location
{
	location_id,
	location_name



var express = require('express');
var router = express.Router();

var MongoClient = require('mongodb').MongoClient;
var assert = require('assert');
var url = 'mongodb://localhost:27017/forkky';
MongoClient.connect(url, function(err, db) {
  assert.equal(null, err);
  console.log("Connected correctly to server and forkky db.");
  db.close();
});

/* GET home page. */
router.get('/', function(req, res, next) {
  
    var collection = db.collection('locations');
  /*  collection.find().toArray(function(err, docs) {
        assert.equal(null, err);
        assert.equal(3, docs.length);

        //db.close();
      });*/
  res.render('Addresto', { title: 'sent'  });
});
router.post('/', function(req, res, next) {
    var restaurant_name = req.body.restaurant_name;
    var restaurant_address = req.body.restaurant_address;
    var restaurant_location = req.body.restaurant_location;
    var about = req.body.about;
    var restaurant_phone = req.body.restaurant_phone;
    var restaurant_price = req.body.restaurant_price;
    var working_hours = req.body.working_hours;
    var menu_path = req.body.menu_path;
    var speciality_item = req.body.speciality_item;
    var restaurant_profilepic = req.body.restaurant_profilepic;
    var restaurant_rating = req.body.restaurant_rating;
    
  var insertDocument = function(db, callback) {
   db.collection('restaurants').insertOne( {
    
      "restaurant_name" : restaurant_name,
      "restaurant_address" : restaurant_address,
      "restaurant_phone" : restaurant_phone,
      "about" : about,
      "working_hours" : working_hours,
      "restaurant_rating" : restaurant_rating,
      "restaurant_price" : restaurant_price

   }, function(err, result) {
    assert.equal(err, null);
    console.log("Inserted a document into the restaurants collection.");
    callback(result);
  });
};
    
  MongoClient.connect(url, function(err, db) {
  assert.equal(null, err);
  insertDocument(db, function() {
      db.close();
  });
});
  
    
});

module.exports = router;
